// Code generated by capnpc-go. DO NOT EDIT.

package basinprovider

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	fc "capnproto.org/go/capnp/v3/flowcontrol"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
	capnp2 "github.com/tablelandnetwork/basin-cli/pkg/capnp"
)

type Publications capnp.Client

// Publications_TypeID is the unique identifier for the type Publications.
const Publications_TypeID = 0xfddc20d968f417dd

func (c Publications) Create(ctx context.Context, params func(Publications_create_Params) error) (Publications_create_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xfddc20d968f417dd,
			MethodID:      0,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications",
			MethodName:    "create",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Publications_create_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Publications_create_Results_Future{Future: ans.Future()}, release

}

func (c Publications) Push(ctx context.Context, params func(Publications_push_Params) error) (Publications_push_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xfddc20d968f417dd,
			MethodID:      1,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications",
			MethodName:    "push",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Publications_push_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Publications_push_Results_Future{Future: ans.Future()}, release

}

func (c Publications) Upload(ctx context.Context, params func(Publications_upload_Params) error) (Publications_upload_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xfddc20d968f417dd,
			MethodID:      2,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications",
			MethodName:    "upload",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Publications_upload_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Publications_upload_Results_Future{Future: ans.Future()}, release

}

func (c Publications) List(ctx context.Context, params func(Publications_list_Params) error) (Publications_list_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xfddc20d968f417dd,
			MethodID:      3,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications",
			MethodName:    "list",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Publications_list_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Publications_list_Results_Future{Future: ans.Future()}, release

}

func (c Publications) Deals(ctx context.Context, params func(Publications_deals_Params) error) (Publications_deals_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xfddc20d968f417dd,
			MethodID:      4,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications",
			MethodName:    "deals",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 16, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Publications_deals_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Publications_deals_Results_Future{Future: ans.Future()}, release

}

func (c Publications) LatestDeals(ctx context.Context, params func(Publications_latestDeals_Params) error) (Publications_latestDeals_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xfddc20d968f417dd,
			MethodID:      5,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications",
			MethodName:    "latestDeals",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Publications_latestDeals_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Publications_latestDeals_Results_Future{Future: ans.Future()}, release

}

func (c Publications) WaitStreaming() error {
	return capnp.Client(c).WaitStreaming()
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c Publications) String() string {
	return "Publications(" + capnp.Client(c).String() + ")"
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c Publications) AddRef() Publications {
	return Publications(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c Publications) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c Publications) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c Publications) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (Publications) DecodeFromPtr(p capnp.Ptr) Publications {
	return Publications(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c Publications) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c Publications) IsSame(other Publications) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c Publications) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c Publications) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
}

// A Publications_Server is a Publications with a local implementation.
type Publications_Server interface {
	Create(context.Context, Publications_create) error

	Push(context.Context, Publications_push) error

	Upload(context.Context, Publications_upload) error

	List(context.Context, Publications_list) error

	Deals(context.Context, Publications_deals) error

	LatestDeals(context.Context, Publications_latestDeals) error
}

// Publications_NewServer creates a new Server from an implementation of Publications_Server.
func Publications_NewServer(s Publications_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Publications_Methods(nil, s), s, c)
}

// Publications_ServerToClient creates a new Client from an implementation of Publications_Server.
// The caller is responsible for calling Release on the returned Client.
func Publications_ServerToClient(s Publications_Server) Publications {
	return Publications(capnp.NewClient(Publications_NewServer(s)))
}

// Publications_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Publications_Methods(methods []server.Method, s Publications_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 6)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfddc20d968f417dd,
			MethodID:      0,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications",
			MethodName:    "create",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Create(ctx, Publications_create{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfddc20d968f417dd,
			MethodID:      1,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications",
			MethodName:    "push",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Push(ctx, Publications_push{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfddc20d968f417dd,
			MethodID:      2,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications",
			MethodName:    "upload",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Upload(ctx, Publications_upload{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfddc20d968f417dd,
			MethodID:      3,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications",
			MethodName:    "list",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.List(ctx, Publications_list{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfddc20d968f417dd,
			MethodID:      4,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications",
			MethodName:    "deals",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Deals(ctx, Publications_deals{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfddc20d968f417dd,
			MethodID:      5,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications",
			MethodName:    "latestDeals",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.LatestDeals(ctx, Publications_latestDeals{call})
		},
	})

	return methods
}

// Publications_create holds the state for a server call to Publications.create.
// See server.Call for documentation.
type Publications_create struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Publications_create) Args() Publications_create_Params {
	return Publications_create_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Publications_create) AllocResults() (Publications_create_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Publications_create_Results(r), err
}

// Publications_push holds the state for a server call to Publications.push.
// See server.Call for documentation.
type Publications_push struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Publications_push) Args() Publications_push_Params {
	return Publications_push_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Publications_push) AllocResults() (Publications_push_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Publications_push_Results(r), err
}

// Publications_upload holds the state for a server call to Publications.upload.
// See server.Call for documentation.
type Publications_upload struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Publications_upload) Args() Publications_upload_Params {
	return Publications_upload_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Publications_upload) AllocResults() (Publications_upload_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_upload_Results(r), err
}

// Publications_list holds the state for a server call to Publications.list.
// See server.Call for documentation.
type Publications_list struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Publications_list) Args() Publications_list_Params {
	return Publications_list_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Publications_list) AllocResults() (Publications_list_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_list_Results(r), err
}

// Publications_deals holds the state for a server call to Publications.deals.
// See server.Call for documentation.
type Publications_deals struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Publications_deals) Args() Publications_deals_Params {
	return Publications_deals_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Publications_deals) AllocResults() (Publications_deals_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_deals_Results(r), err
}

// Publications_latestDeals holds the state for a server call to Publications.latestDeals.
// See server.Call for documentation.
type Publications_latestDeals struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Publications_latestDeals) Args() Publications_latestDeals_Params {
	return Publications_latestDeals_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Publications_latestDeals) AllocResults() (Publications_latestDeals_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_latestDeals_Results(r), err
}

// Publications_List is a list of Publications.
type Publications_List = capnp.CapList[Publications]

// NewPublications creates a new list of Publications.
func NewPublications_List(s *capnp.Segment, sz int32) (Publications_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[Publications](l), err
}

type Publications_Callback capnp.Client

// Publications_Callback_TypeID is the unique identifier for the type Publications_Callback.
const Publications_Callback_TypeID = 0xb4928ae23403b190

func (c Publications_Callback) Write(ctx context.Context, params func(Publications_Callback_write_Params) error) (Publications_Callback_write_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb4928ae23403b190,
			MethodID:      0,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications.Callback",
			MethodName:    "write",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Publications_Callback_write_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Publications_Callback_write_Results_Future{Future: ans.Future()}, release

}

func (c Publications_Callback) Done(ctx context.Context, params func(Publications_Callback_done_Params) error) (Publications_Callback_done_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb4928ae23403b190,
			MethodID:      1,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications.Callback",
			MethodName:    "done",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Publications_Callback_done_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Publications_Callback_done_Results_Future{Future: ans.Future()}, release

}

func (c Publications_Callback) WaitStreaming() error {
	return capnp.Client(c).WaitStreaming()
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c Publications_Callback) String() string {
	return "Publications_Callback(" + capnp.Client(c).String() + ")"
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c Publications_Callback) AddRef() Publications_Callback {
	return Publications_Callback(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c Publications_Callback) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c Publications_Callback) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c Publications_Callback) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (Publications_Callback) DecodeFromPtr(p capnp.Ptr) Publications_Callback {
	return Publications_Callback(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c Publications_Callback) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c Publications_Callback) IsSame(other Publications_Callback) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c Publications_Callback) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c Publications_Callback) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
}

// A Publications_Callback_Server is a Publications_Callback with a local implementation.
type Publications_Callback_Server interface {
	Write(context.Context, Publications_Callback_write) error

	Done(context.Context, Publications_Callback_done) error
}

// Publications_Callback_NewServer creates a new Server from an implementation of Publications_Callback_Server.
func Publications_Callback_NewServer(s Publications_Callback_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Publications_Callback_Methods(nil, s), s, c)
}

// Publications_Callback_ServerToClient creates a new Client from an implementation of Publications_Callback_Server.
// The caller is responsible for calling Release on the returned Client.
func Publications_Callback_ServerToClient(s Publications_Callback_Server) Publications_Callback {
	return Publications_Callback(capnp.NewClient(Publications_Callback_NewServer(s)))
}

// Publications_Callback_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Publications_Callback_Methods(methods []server.Method, s Publications_Callback_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb4928ae23403b190,
			MethodID:      0,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications.Callback",
			MethodName:    "write",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Write(ctx, Publications_Callback_write{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb4928ae23403b190,
			MethodID:      1,
			InterfaceName: "pkg/basinprovider/provider.capnp:Publications.Callback",
			MethodName:    "done",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Done(ctx, Publications_Callback_done{call})
		},
	})

	return methods
}

// Publications_Callback_write holds the state for a server call to Publications_Callback.write.
// See server.Call for documentation.
type Publications_Callback_write struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Publications_Callback_write) Args() Publications_Callback_write_Params {
	return Publications_Callback_write_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Publications_Callback_write) AllocResults() (Publications_Callback_write_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Publications_Callback_write_Results(r), err
}

// Publications_Callback_done holds the state for a server call to Publications_Callback.done.
// See server.Call for documentation.
type Publications_Callback_done struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Publications_Callback_done) Args() Publications_Callback_done_Params {
	return Publications_Callback_done_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Publications_Callback_done) AllocResults() (Publications_Callback_done_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Publications_Callback_done_Results(r), err
}

// Publications_Callback_List is a list of Publications_Callback.
type Publications_Callback_List = capnp.CapList[Publications_Callback]

// NewPublications_Callback creates a new list of Publications_Callback.
func NewPublications_Callback_List(s *capnp.Segment, sz int32) (Publications_Callback_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[Publications_Callback](l), err
}

type Publications_Callback_write_Params capnp.Struct

// Publications_Callback_write_Params_TypeID is the unique identifier for the type Publications_Callback_write_Params.
const Publications_Callback_write_Params_TypeID = 0x8c6625092276093d

func NewPublications_Callback_write_Params(s *capnp.Segment) (Publications_Callback_write_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_Callback_write_Params(st), err
}

func NewRootPublications_Callback_write_Params(s *capnp.Segment) (Publications_Callback_write_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_Callback_write_Params(st), err
}

func ReadRootPublications_Callback_write_Params(msg *capnp.Message) (Publications_Callback_write_Params, error) {
	root, err := msg.Root()
	return Publications_Callback_write_Params(root.Struct()), err
}

func (s Publications_Callback_write_Params) String() string {
	str, _ := text.Marshal(0x8c6625092276093d, capnp.Struct(s))
	return str
}

func (s Publications_Callback_write_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_Callback_write_Params) DecodeFromPtr(p capnp.Ptr) Publications_Callback_write_Params {
	return Publications_Callback_write_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_Callback_write_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_Callback_write_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_Callback_write_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_Callback_write_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Publications_Callback_write_Params) Chunk() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return []byte(p.Data()), err
}

func (s Publications_Callback_write_Params) HasChunk() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Publications_Callback_write_Params) SetChunk(v []byte) error {
	return capnp.Struct(s).SetData(0, v)
}

// Publications_Callback_write_Params_List is a list of Publications_Callback_write_Params.
type Publications_Callback_write_Params_List = capnp.StructList[Publications_Callback_write_Params]

// NewPublications_Callback_write_Params creates a new list of Publications_Callback_write_Params.
func NewPublications_Callback_write_Params_List(s *capnp.Segment, sz int32) (Publications_Callback_write_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Publications_Callback_write_Params](l), err
}

// Publications_Callback_write_Params_Future is a wrapper for a Publications_Callback_write_Params promised by a client call.
type Publications_Callback_write_Params_Future struct{ *capnp.Future }

func (f Publications_Callback_write_Params_Future) Struct() (Publications_Callback_write_Params, error) {
	p, err := f.Future.Ptr()
	return Publications_Callback_write_Params(p.Struct()), err
}

type Publications_Callback_write_Results capnp.Struct

// Publications_Callback_write_Results_TypeID is the unique identifier for the type Publications_Callback_write_Results.
const Publications_Callback_write_Results_TypeID = 0xc7b7a97070ce93e5

func NewPublications_Callback_write_Results(s *capnp.Segment) (Publications_Callback_write_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Publications_Callback_write_Results(st), err
}

func NewRootPublications_Callback_write_Results(s *capnp.Segment) (Publications_Callback_write_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Publications_Callback_write_Results(st), err
}

func ReadRootPublications_Callback_write_Results(msg *capnp.Message) (Publications_Callback_write_Results, error) {
	root, err := msg.Root()
	return Publications_Callback_write_Results(root.Struct()), err
}

func (s Publications_Callback_write_Results) String() string {
	str, _ := text.Marshal(0xc7b7a97070ce93e5, capnp.Struct(s))
	return str
}

func (s Publications_Callback_write_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_Callback_write_Results) DecodeFromPtr(p capnp.Ptr) Publications_Callback_write_Results {
	return Publications_Callback_write_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_Callback_write_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_Callback_write_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_Callback_write_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_Callback_write_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Publications_Callback_write_Results_List is a list of Publications_Callback_write_Results.
type Publications_Callback_write_Results_List = capnp.StructList[Publications_Callback_write_Results]

// NewPublications_Callback_write_Results creates a new list of Publications_Callback_write_Results.
func NewPublications_Callback_write_Results_List(s *capnp.Segment, sz int32) (Publications_Callback_write_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Publications_Callback_write_Results](l), err
}

// Publications_Callback_write_Results_Future is a wrapper for a Publications_Callback_write_Results promised by a client call.
type Publications_Callback_write_Results_Future struct{ *capnp.Future }

func (f Publications_Callback_write_Results_Future) Struct() (Publications_Callback_write_Results, error) {
	p, err := f.Future.Ptr()
	return Publications_Callback_write_Results(p.Struct()), err
}

type Publications_Callback_done_Params capnp.Struct

// Publications_Callback_done_Params_TypeID is the unique identifier for the type Publications_Callback_done_Params.
const Publications_Callback_done_Params_TypeID = 0x90be9e0983809cf5

func NewPublications_Callback_done_Params(s *capnp.Segment) (Publications_Callback_done_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_Callback_done_Params(st), err
}

func NewRootPublications_Callback_done_Params(s *capnp.Segment) (Publications_Callback_done_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_Callback_done_Params(st), err
}

func ReadRootPublications_Callback_done_Params(msg *capnp.Message) (Publications_Callback_done_Params, error) {
	root, err := msg.Root()
	return Publications_Callback_done_Params(root.Struct()), err
}

func (s Publications_Callback_done_Params) String() string {
	str, _ := text.Marshal(0x90be9e0983809cf5, capnp.Struct(s))
	return str
}

func (s Publications_Callback_done_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_Callback_done_Params) DecodeFromPtr(p capnp.Ptr) Publications_Callback_done_Params {
	return Publications_Callback_done_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_Callback_done_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_Callback_done_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_Callback_done_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_Callback_done_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Publications_Callback_done_Params) Sig() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return []byte(p.Data()), err
}

func (s Publications_Callback_done_Params) HasSig() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Publications_Callback_done_Params) SetSig(v []byte) error {
	return capnp.Struct(s).SetData(0, v)
}

// Publications_Callback_done_Params_List is a list of Publications_Callback_done_Params.
type Publications_Callback_done_Params_List = capnp.StructList[Publications_Callback_done_Params]

// NewPublications_Callback_done_Params creates a new list of Publications_Callback_done_Params.
func NewPublications_Callback_done_Params_List(s *capnp.Segment, sz int32) (Publications_Callback_done_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Publications_Callback_done_Params](l), err
}

// Publications_Callback_done_Params_Future is a wrapper for a Publications_Callback_done_Params promised by a client call.
type Publications_Callback_done_Params_Future struct{ *capnp.Future }

func (f Publications_Callback_done_Params_Future) Struct() (Publications_Callback_done_Params, error) {
	p, err := f.Future.Ptr()
	return Publications_Callback_done_Params(p.Struct()), err
}

type Publications_Callback_done_Results capnp.Struct

// Publications_Callback_done_Results_TypeID is the unique identifier for the type Publications_Callback_done_Results.
const Publications_Callback_done_Results_TypeID = 0xcd754537fa2ac00e

func NewPublications_Callback_done_Results(s *capnp.Segment) (Publications_Callback_done_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Publications_Callback_done_Results(st), err
}

func NewRootPublications_Callback_done_Results(s *capnp.Segment) (Publications_Callback_done_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Publications_Callback_done_Results(st), err
}

func ReadRootPublications_Callback_done_Results(msg *capnp.Message) (Publications_Callback_done_Results, error) {
	root, err := msg.Root()
	return Publications_Callback_done_Results(root.Struct()), err
}

func (s Publications_Callback_done_Results) String() string {
	str, _ := text.Marshal(0xcd754537fa2ac00e, capnp.Struct(s))
	return str
}

func (s Publications_Callback_done_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_Callback_done_Results) DecodeFromPtr(p capnp.Ptr) Publications_Callback_done_Results {
	return Publications_Callback_done_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_Callback_done_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_Callback_done_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_Callback_done_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_Callback_done_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Publications_Callback_done_Results_List is a list of Publications_Callback_done_Results.
type Publications_Callback_done_Results_List = capnp.StructList[Publications_Callback_done_Results]

// NewPublications_Callback_done_Results creates a new list of Publications_Callback_done_Results.
func NewPublications_Callback_done_Results_List(s *capnp.Segment, sz int32) (Publications_Callback_done_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Publications_Callback_done_Results](l), err
}

// Publications_Callback_done_Results_Future is a wrapper for a Publications_Callback_done_Results promised by a client call.
type Publications_Callback_done_Results_Future struct{ *capnp.Future }

func (f Publications_Callback_done_Results_Future) Struct() (Publications_Callback_done_Results, error) {
	p, err := f.Future.Ptr()
	return Publications_Callback_done_Results(p.Struct()), err
}

type Publications_create_Params capnp.Struct

// Publications_create_Params_TypeID is the unique identifier for the type Publications_create_Params.
const Publications_create_Params_TypeID = 0x8986414763ed9fe4

func NewPublications_create_Params(s *capnp.Segment) (Publications_create_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Publications_create_Params(st), err
}

func NewRootPublications_create_Params(s *capnp.Segment) (Publications_create_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Publications_create_Params(st), err
}

func ReadRootPublications_create_Params(msg *capnp.Message) (Publications_create_Params, error) {
	root, err := msg.Root()
	return Publications_create_Params(root.Struct()), err
}

func (s Publications_create_Params) String() string {
	str, _ := text.Marshal(0x8986414763ed9fe4, capnp.Struct(s))
	return str
}

func (s Publications_create_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_create_Params) DecodeFromPtr(p capnp.Ptr) Publications_create_Params {
	return Publications_create_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_create_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_create_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_create_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_create_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Publications_create_Params) Ns() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Publications_create_Params) HasNs() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Publications_create_Params) NsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Publications_create_Params) SetNs(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Publications_create_Params) Rel() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Publications_create_Params) HasRel() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Publications_create_Params) RelBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Publications_create_Params) SetRel(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Publications_create_Params) Schema() (capnp2.Schema, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return capnp2.Schema(p.Struct()), err
}

func (s Publications_create_Params) HasSchema() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Publications_create_Params) SetSchema(v capnp2.Schema) error {
	return capnp.Struct(s).SetPtr(2, capnp.Struct(v).ToPtr())
}

// NewSchema sets the schema field to a newly
// allocated capnp2.Schema struct, preferring placement in s's segment.
func (s Publications_create_Params) NewSchema() (capnp2.Schema, error) {
	ss, err := capnp2.NewSchema(capnp.Struct(s).Segment())
	if err != nil {
		return capnp2.Schema{}, err
	}
	err = capnp.Struct(s).SetPtr(2, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Publications_create_Params) Owner() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return []byte(p.Data()), err
}

func (s Publications_create_Params) HasOwner() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s Publications_create_Params) SetOwner(v []byte) error {
	return capnp.Struct(s).SetData(3, v)
}

// Publications_create_Params_List is a list of Publications_create_Params.
type Publications_create_Params_List = capnp.StructList[Publications_create_Params]

// NewPublications_create_Params creates a new list of Publications_create_Params.
func NewPublications_create_Params_List(s *capnp.Segment, sz int32) (Publications_create_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return capnp.StructList[Publications_create_Params](l), err
}

// Publications_create_Params_Future is a wrapper for a Publications_create_Params promised by a client call.
type Publications_create_Params_Future struct{ *capnp.Future }

func (f Publications_create_Params_Future) Struct() (Publications_create_Params, error) {
	p, err := f.Future.Ptr()
	return Publications_create_Params(p.Struct()), err
}
func (p Publications_create_Params_Future) Schema() capnp2.Schema_Future {
	return capnp2.Schema_Future{Future: p.Future.Field(2, nil)}
}

type Publications_create_Results capnp.Struct

// Publications_create_Results_TypeID is the unique identifier for the type Publications_create_Results.
const Publications_create_Results_TypeID = 0x9d09768207bbb14b

func NewPublications_create_Results(s *capnp.Segment) (Publications_create_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Publications_create_Results(st), err
}

func NewRootPublications_create_Results(s *capnp.Segment) (Publications_create_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Publications_create_Results(st), err
}

func ReadRootPublications_create_Results(msg *capnp.Message) (Publications_create_Results, error) {
	root, err := msg.Root()
	return Publications_create_Results(root.Struct()), err
}

func (s Publications_create_Results) String() string {
	str, _ := text.Marshal(0x9d09768207bbb14b, capnp.Struct(s))
	return str
}

func (s Publications_create_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_create_Results) DecodeFromPtr(p capnp.Ptr) Publications_create_Results {
	return Publications_create_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_create_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_create_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_create_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_create_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Publications_create_Results) Exists() bool {
	return capnp.Struct(s).Bit(0)
}

func (s Publications_create_Results) SetExists(v bool) {
	capnp.Struct(s).SetBit(0, v)
}

// Publications_create_Results_List is a list of Publications_create_Results.
type Publications_create_Results_List = capnp.StructList[Publications_create_Results]

// NewPublications_create_Results creates a new list of Publications_create_Results.
func NewPublications_create_Results_List(s *capnp.Segment, sz int32) (Publications_create_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[Publications_create_Results](l), err
}

// Publications_create_Results_Future is a wrapper for a Publications_create_Results promised by a client call.
type Publications_create_Results_Future struct{ *capnp.Future }

func (f Publications_create_Results_Future) Struct() (Publications_create_Results, error) {
	p, err := f.Future.Ptr()
	return Publications_create_Results(p.Struct()), err
}

type Publications_push_Params capnp.Struct

// Publications_push_Params_TypeID is the unique identifier for the type Publications_push_Params.
const Publications_push_Params_TypeID = 0x85cf10ba0781d1d9

func NewPublications_push_Params(s *capnp.Segment) (Publications_push_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Publications_push_Params(st), err
}

func NewRootPublications_push_Params(s *capnp.Segment) (Publications_push_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Publications_push_Params(st), err
}

func ReadRootPublications_push_Params(msg *capnp.Message) (Publications_push_Params, error) {
	root, err := msg.Root()
	return Publications_push_Params(root.Struct()), err
}

func (s Publications_push_Params) String() string {
	str, _ := text.Marshal(0x85cf10ba0781d1d9, capnp.Struct(s))
	return str
}

func (s Publications_push_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_push_Params) DecodeFromPtr(p capnp.Ptr) Publications_push_Params {
	return Publications_push_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_push_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_push_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_push_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_push_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Publications_push_Params) Ns() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Publications_push_Params) HasNs() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Publications_push_Params) NsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Publications_push_Params) SetNs(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Publications_push_Params) Rel() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Publications_push_Params) HasRel() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Publications_push_Params) RelBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Publications_push_Params) SetRel(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Publications_push_Params) Tx() (capnp2.Tx, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return capnp2.Tx(p.Struct()), err
}

func (s Publications_push_Params) HasTx() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Publications_push_Params) SetTx(v capnp2.Tx) error {
	return capnp.Struct(s).SetPtr(2, capnp.Struct(v).ToPtr())
}

// NewTx sets the tx field to a newly
// allocated capnp2.Tx struct, preferring placement in s's segment.
func (s Publications_push_Params) NewTx() (capnp2.Tx, error) {
	ss, err := capnp2.NewTx(capnp.Struct(s).Segment())
	if err != nil {
		return capnp2.Tx{}, err
	}
	err = capnp.Struct(s).SetPtr(2, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Publications_push_Params) Sig() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return []byte(p.Data()), err
}

func (s Publications_push_Params) HasSig() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s Publications_push_Params) SetSig(v []byte) error {
	return capnp.Struct(s).SetData(3, v)
}

// Publications_push_Params_List is a list of Publications_push_Params.
type Publications_push_Params_List = capnp.StructList[Publications_push_Params]

// NewPublications_push_Params creates a new list of Publications_push_Params.
func NewPublications_push_Params_List(s *capnp.Segment, sz int32) (Publications_push_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return capnp.StructList[Publications_push_Params](l), err
}

// Publications_push_Params_Future is a wrapper for a Publications_push_Params promised by a client call.
type Publications_push_Params_Future struct{ *capnp.Future }

func (f Publications_push_Params_Future) Struct() (Publications_push_Params, error) {
	p, err := f.Future.Ptr()
	return Publications_push_Params(p.Struct()), err
}
func (p Publications_push_Params_Future) Tx() capnp2.Tx_Future {
	return capnp2.Tx_Future{Future: p.Future.Field(2, nil)}
}

type Publications_push_Results capnp.Struct

// Publications_push_Results_TypeID is the unique identifier for the type Publications_push_Results.
const Publications_push_Results_TypeID = 0xdf7b33d89ff629bd

func NewPublications_push_Results(s *capnp.Segment) (Publications_push_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Publications_push_Results(st), err
}

func NewRootPublications_push_Results(s *capnp.Segment) (Publications_push_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Publications_push_Results(st), err
}

func ReadRootPublications_push_Results(msg *capnp.Message) (Publications_push_Results, error) {
	root, err := msg.Root()
	return Publications_push_Results(root.Struct()), err
}

func (s Publications_push_Results) String() string {
	str, _ := text.Marshal(0xdf7b33d89ff629bd, capnp.Struct(s))
	return str
}

func (s Publications_push_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_push_Results) DecodeFromPtr(p capnp.Ptr) Publications_push_Results {
	return Publications_push_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_push_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_push_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_push_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_push_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Publications_push_Results_List is a list of Publications_push_Results.
type Publications_push_Results_List = capnp.StructList[Publications_push_Results]

// NewPublications_push_Results creates a new list of Publications_push_Results.
func NewPublications_push_Results_List(s *capnp.Segment, sz int32) (Publications_push_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Publications_push_Results](l), err
}

// Publications_push_Results_Future is a wrapper for a Publications_push_Results promised by a client call.
type Publications_push_Results_Future struct{ *capnp.Future }

func (f Publications_push_Results_Future) Struct() (Publications_push_Results, error) {
	p, err := f.Future.Ptr()
	return Publications_push_Results(p.Struct()), err
}

type Publications_upload_Params capnp.Struct

// Publications_upload_Params_TypeID is the unique identifier for the type Publications_upload_Params.
const Publications_upload_Params_TypeID = 0xd067b888abba0bca

func NewPublications_upload_Params(s *capnp.Segment) (Publications_upload_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Publications_upload_Params(st), err
}

func NewRootPublications_upload_Params(s *capnp.Segment) (Publications_upload_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Publications_upload_Params(st), err
}

func ReadRootPublications_upload_Params(msg *capnp.Message) (Publications_upload_Params, error) {
	root, err := msg.Root()
	return Publications_upload_Params(root.Struct()), err
}

func (s Publications_upload_Params) String() string {
	str, _ := text.Marshal(0xd067b888abba0bca, capnp.Struct(s))
	return str
}

func (s Publications_upload_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_upload_Params) DecodeFromPtr(p capnp.Ptr) Publications_upload_Params {
	return Publications_upload_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_upload_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_upload_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_upload_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_upload_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Publications_upload_Params) Ns() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Publications_upload_Params) HasNs() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Publications_upload_Params) NsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Publications_upload_Params) SetNs(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Publications_upload_Params) Rel() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Publications_upload_Params) HasRel() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Publications_upload_Params) RelBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Publications_upload_Params) SetRel(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Publications_upload_Params) Size() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Publications_upload_Params) SetSize(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

// Publications_upload_Params_List is a list of Publications_upload_Params.
type Publications_upload_Params_List = capnp.StructList[Publications_upload_Params]

// NewPublications_upload_Params creates a new list of Publications_upload_Params.
func NewPublications_upload_Params_List(s *capnp.Segment, sz int32) (Publications_upload_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return capnp.StructList[Publications_upload_Params](l), err
}

// Publications_upload_Params_Future is a wrapper for a Publications_upload_Params promised by a client call.
type Publications_upload_Params_Future struct{ *capnp.Future }

func (f Publications_upload_Params_Future) Struct() (Publications_upload_Params, error) {
	p, err := f.Future.Ptr()
	return Publications_upload_Params(p.Struct()), err
}

type Publications_upload_Results capnp.Struct

// Publications_upload_Results_TypeID is the unique identifier for the type Publications_upload_Results.
const Publications_upload_Results_TypeID = 0xd422be623bb0f731

func NewPublications_upload_Results(s *capnp.Segment) (Publications_upload_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_upload_Results(st), err
}

func NewRootPublications_upload_Results(s *capnp.Segment) (Publications_upload_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_upload_Results(st), err
}

func ReadRootPublications_upload_Results(msg *capnp.Message) (Publications_upload_Results, error) {
	root, err := msg.Root()
	return Publications_upload_Results(root.Struct()), err
}

func (s Publications_upload_Results) String() string {
	str, _ := text.Marshal(0xd422be623bb0f731, capnp.Struct(s))
	return str
}

func (s Publications_upload_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_upload_Results) DecodeFromPtr(p capnp.Ptr) Publications_upload_Results {
	return Publications_upload_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_upload_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_upload_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_upload_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_upload_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Publications_upload_Results) Callback() Publications_Callback {
	p, _ := capnp.Struct(s).Ptr(0)
	return Publications_Callback(p.Interface().Client())
}

func (s Publications_upload_Results) HasCallback() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Publications_upload_Results) SetCallback(v Publications_Callback) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().CapTable().Add(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// Publications_upload_Results_List is a list of Publications_upload_Results.
type Publications_upload_Results_List = capnp.StructList[Publications_upload_Results]

// NewPublications_upload_Results creates a new list of Publications_upload_Results.
func NewPublications_upload_Results_List(s *capnp.Segment, sz int32) (Publications_upload_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Publications_upload_Results](l), err
}

// Publications_upload_Results_Future is a wrapper for a Publications_upload_Results promised by a client call.
type Publications_upload_Results_Future struct{ *capnp.Future }

func (f Publications_upload_Results_Future) Struct() (Publications_upload_Results, error) {
	p, err := f.Future.Ptr()
	return Publications_upload_Results(p.Struct()), err
}
func (p Publications_upload_Results_Future) Callback() Publications_Callback {
	return Publications_Callback(p.Future.Field(0, nil).Client())
}

type Publications_list_Params capnp.Struct

// Publications_list_Params_TypeID is the unique identifier for the type Publications_list_Params.
const Publications_list_Params_TypeID = 0xa202984178fc6068

func NewPublications_list_Params(s *capnp.Segment) (Publications_list_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_list_Params(st), err
}

func NewRootPublications_list_Params(s *capnp.Segment) (Publications_list_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_list_Params(st), err
}

func ReadRootPublications_list_Params(msg *capnp.Message) (Publications_list_Params, error) {
	root, err := msg.Root()
	return Publications_list_Params(root.Struct()), err
}

func (s Publications_list_Params) String() string {
	str, _ := text.Marshal(0xa202984178fc6068, capnp.Struct(s))
	return str
}

func (s Publications_list_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_list_Params) DecodeFromPtr(p capnp.Ptr) Publications_list_Params {
	return Publications_list_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_list_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_list_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_list_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_list_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Publications_list_Params) Owner() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return []byte(p.Data()), err
}

func (s Publications_list_Params) HasOwner() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Publications_list_Params) SetOwner(v []byte) error {
	return capnp.Struct(s).SetData(0, v)
}

// Publications_list_Params_List is a list of Publications_list_Params.
type Publications_list_Params_List = capnp.StructList[Publications_list_Params]

// NewPublications_list_Params creates a new list of Publications_list_Params.
func NewPublications_list_Params_List(s *capnp.Segment, sz int32) (Publications_list_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Publications_list_Params](l), err
}

// Publications_list_Params_Future is a wrapper for a Publications_list_Params promised by a client call.
type Publications_list_Params_Future struct{ *capnp.Future }

func (f Publications_list_Params_Future) Struct() (Publications_list_Params, error) {
	p, err := f.Future.Ptr()
	return Publications_list_Params(p.Struct()), err
}

type Publications_list_Results capnp.Struct

// Publications_list_Results_TypeID is the unique identifier for the type Publications_list_Results.
const Publications_list_Results_TypeID = 0xec1df2a9965771fc

func NewPublications_list_Results(s *capnp.Segment) (Publications_list_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_list_Results(st), err
}

func NewRootPublications_list_Results(s *capnp.Segment) (Publications_list_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_list_Results(st), err
}

func ReadRootPublications_list_Results(msg *capnp.Message) (Publications_list_Results, error) {
	root, err := msg.Root()
	return Publications_list_Results(root.Struct()), err
}

func (s Publications_list_Results) String() string {
	str, _ := text.Marshal(0xec1df2a9965771fc, capnp.Struct(s))
	return str
}

func (s Publications_list_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_list_Results) DecodeFromPtr(p capnp.Ptr) Publications_list_Results {
	return Publications_list_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_list_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_list_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_list_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_list_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Publications_list_Results) Publications() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return capnp.TextList(p.List()), err
}

func (s Publications_list_Results) HasPublications() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Publications_list_Results) SetPublications(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewPublications sets the publications field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Publications_list_Results) NewPublications(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// Publications_list_Results_List is a list of Publications_list_Results.
type Publications_list_Results_List = capnp.StructList[Publications_list_Results]

// NewPublications_list_Results creates a new list of Publications_list_Results.
func NewPublications_list_Results_List(s *capnp.Segment, sz int32) (Publications_list_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Publications_list_Results](l), err
}

// Publications_list_Results_Future is a wrapper for a Publications_list_Results promised by a client call.
type Publications_list_Results_Future struct{ *capnp.Future }

func (f Publications_list_Results_Future) Struct() (Publications_list_Results, error) {
	p, err := f.Future.Ptr()
	return Publications_list_Results(p.Struct()), err
}

type Publications_deals_Params capnp.Struct

// Publications_deals_Params_TypeID is the unique identifier for the type Publications_deals_Params.
const Publications_deals_Params_TypeID = 0x889bad5ee80bd4ae

func NewPublications_deals_Params(s *capnp.Segment) (Publications_deals_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Publications_deals_Params(st), err
}

func NewRootPublications_deals_Params(s *capnp.Segment) (Publications_deals_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Publications_deals_Params(st), err
}

func ReadRootPublications_deals_Params(msg *capnp.Message) (Publications_deals_Params, error) {
	root, err := msg.Root()
	return Publications_deals_Params(root.Struct()), err
}

func (s Publications_deals_Params) String() string {
	str, _ := text.Marshal(0x889bad5ee80bd4ae, capnp.Struct(s))
	return str
}

func (s Publications_deals_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_deals_Params) DecodeFromPtr(p capnp.Ptr) Publications_deals_Params {
	return Publications_deals_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_deals_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_deals_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_deals_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_deals_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Publications_deals_Params) Ns() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Publications_deals_Params) HasNs() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Publications_deals_Params) NsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Publications_deals_Params) SetNs(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Publications_deals_Params) Rel() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Publications_deals_Params) HasRel() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Publications_deals_Params) RelBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Publications_deals_Params) SetRel(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Publications_deals_Params) Limit() uint32 {
	return capnp.Struct(s).Uint32(0)
}

func (s Publications_deals_Params) SetLimit(v uint32) {
	capnp.Struct(s).SetUint32(0, v)
}

func (s Publications_deals_Params) Offset() uint64 {
	return capnp.Struct(s).Uint64(8)
}

func (s Publications_deals_Params) SetOffset(v uint64) {
	capnp.Struct(s).SetUint64(8, v)
}

// Publications_deals_Params_List is a list of Publications_deals_Params.
type Publications_deals_Params_List = capnp.StructList[Publications_deals_Params]

// NewPublications_deals_Params creates a new list of Publications_deals_Params.
func NewPublications_deals_Params_List(s *capnp.Segment, sz int32) (Publications_deals_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2}, sz)
	return capnp.StructList[Publications_deals_Params](l), err
}

// Publications_deals_Params_Future is a wrapper for a Publications_deals_Params promised by a client call.
type Publications_deals_Params_Future struct{ *capnp.Future }

func (f Publications_deals_Params_Future) Struct() (Publications_deals_Params, error) {
	p, err := f.Future.Ptr()
	return Publications_deals_Params(p.Struct()), err
}

type Publications_deals_Results capnp.Struct

// Publications_deals_Results_TypeID is the unique identifier for the type Publications_deals_Results.
const Publications_deals_Results_TypeID = 0x8b0e78e7cb3c1c68

func NewPublications_deals_Results(s *capnp.Segment) (Publications_deals_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_deals_Results(st), err
}

func NewRootPublications_deals_Results(s *capnp.Segment) (Publications_deals_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_deals_Results(st), err
}

func ReadRootPublications_deals_Results(msg *capnp.Message) (Publications_deals_Results, error) {
	root, err := msg.Root()
	return Publications_deals_Results(root.Struct()), err
}

func (s Publications_deals_Results) String() string {
	str, _ := text.Marshal(0x8b0e78e7cb3c1c68, capnp.Struct(s))
	return str
}

func (s Publications_deals_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_deals_Results) DecodeFromPtr(p capnp.Ptr) Publications_deals_Results {
	return Publications_deals_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_deals_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_deals_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_deals_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_deals_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Publications_deals_Results) Deals() (capnp2.DealInfo_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return capnp2.DealInfo_List(p.List()), err
}

func (s Publications_deals_Results) HasDeals() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Publications_deals_Results) SetDeals(v capnp2.DealInfo_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewDeals sets the deals field to a newly
// allocated capnp2.DealInfo_List, preferring placement in s's segment.
func (s Publications_deals_Results) NewDeals(n int32) (capnp2.DealInfo_List, error) {
	l, err := capnp2.NewDealInfo_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp2.DealInfo_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// Publications_deals_Results_List is a list of Publications_deals_Results.
type Publications_deals_Results_List = capnp.StructList[Publications_deals_Results]

// NewPublications_deals_Results creates a new list of Publications_deals_Results.
func NewPublications_deals_Results_List(s *capnp.Segment, sz int32) (Publications_deals_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Publications_deals_Results](l), err
}

// Publications_deals_Results_Future is a wrapper for a Publications_deals_Results promised by a client call.
type Publications_deals_Results_Future struct{ *capnp.Future }

func (f Publications_deals_Results_Future) Struct() (Publications_deals_Results, error) {
	p, err := f.Future.Ptr()
	return Publications_deals_Results(p.Struct()), err
}

type Publications_latestDeals_Params capnp.Struct

// Publications_latestDeals_Params_TypeID is the unique identifier for the type Publications_latestDeals_Params.
const Publications_latestDeals_Params_TypeID = 0x90b6622e0669b417

func NewPublications_latestDeals_Params(s *capnp.Segment) (Publications_latestDeals_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Publications_latestDeals_Params(st), err
}

func NewRootPublications_latestDeals_Params(s *capnp.Segment) (Publications_latestDeals_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Publications_latestDeals_Params(st), err
}

func ReadRootPublications_latestDeals_Params(msg *capnp.Message) (Publications_latestDeals_Params, error) {
	root, err := msg.Root()
	return Publications_latestDeals_Params(root.Struct()), err
}

func (s Publications_latestDeals_Params) String() string {
	str, _ := text.Marshal(0x90b6622e0669b417, capnp.Struct(s))
	return str
}

func (s Publications_latestDeals_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_latestDeals_Params) DecodeFromPtr(p capnp.Ptr) Publications_latestDeals_Params {
	return Publications_latestDeals_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_latestDeals_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_latestDeals_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_latestDeals_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_latestDeals_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Publications_latestDeals_Params) Ns() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Publications_latestDeals_Params) HasNs() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Publications_latestDeals_Params) NsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Publications_latestDeals_Params) SetNs(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Publications_latestDeals_Params) Rel() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Publications_latestDeals_Params) HasRel() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Publications_latestDeals_Params) RelBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Publications_latestDeals_Params) SetRel(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Publications_latestDeals_Params) N() uint32 {
	return capnp.Struct(s).Uint32(0)
}

func (s Publications_latestDeals_Params) SetN(v uint32) {
	capnp.Struct(s).SetUint32(0, v)
}

// Publications_latestDeals_Params_List is a list of Publications_latestDeals_Params.
type Publications_latestDeals_Params_List = capnp.StructList[Publications_latestDeals_Params]

// NewPublications_latestDeals_Params creates a new list of Publications_latestDeals_Params.
func NewPublications_latestDeals_Params_List(s *capnp.Segment, sz int32) (Publications_latestDeals_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return capnp.StructList[Publications_latestDeals_Params](l), err
}

// Publications_latestDeals_Params_Future is a wrapper for a Publications_latestDeals_Params promised by a client call.
type Publications_latestDeals_Params_Future struct{ *capnp.Future }

func (f Publications_latestDeals_Params_Future) Struct() (Publications_latestDeals_Params, error) {
	p, err := f.Future.Ptr()
	return Publications_latestDeals_Params(p.Struct()), err
}

type Publications_latestDeals_Results capnp.Struct

// Publications_latestDeals_Results_TypeID is the unique identifier for the type Publications_latestDeals_Results.
const Publications_latestDeals_Results_TypeID = 0xe7da36d32d5316b8

func NewPublications_latestDeals_Results(s *capnp.Segment) (Publications_latestDeals_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_latestDeals_Results(st), err
}

func NewRootPublications_latestDeals_Results(s *capnp.Segment) (Publications_latestDeals_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Publications_latestDeals_Results(st), err
}

func ReadRootPublications_latestDeals_Results(msg *capnp.Message) (Publications_latestDeals_Results, error) {
	root, err := msg.Root()
	return Publications_latestDeals_Results(root.Struct()), err
}

func (s Publications_latestDeals_Results) String() string {
	str, _ := text.Marshal(0xe7da36d32d5316b8, capnp.Struct(s))
	return str
}

func (s Publications_latestDeals_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Publications_latestDeals_Results) DecodeFromPtr(p capnp.Ptr) Publications_latestDeals_Results {
	return Publications_latestDeals_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Publications_latestDeals_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Publications_latestDeals_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Publications_latestDeals_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Publications_latestDeals_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Publications_latestDeals_Results) Deals() (capnp2.DealInfo_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return capnp2.DealInfo_List(p.List()), err
}

func (s Publications_latestDeals_Results) HasDeals() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Publications_latestDeals_Results) SetDeals(v capnp2.DealInfo_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewDeals sets the deals field to a newly
// allocated capnp2.DealInfo_List, preferring placement in s's segment.
func (s Publications_latestDeals_Results) NewDeals(n int32) (capnp2.DealInfo_List, error) {
	l, err := capnp2.NewDealInfo_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp2.DealInfo_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// Publications_latestDeals_Results_List is a list of Publications_latestDeals_Results.
type Publications_latestDeals_Results_List = capnp.StructList[Publications_latestDeals_Results]

// NewPublications_latestDeals_Results creates a new list of Publications_latestDeals_Results.
func NewPublications_latestDeals_Results_List(s *capnp.Segment, sz int32) (Publications_latestDeals_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Publications_latestDeals_Results](l), err
}

// Publications_latestDeals_Results_Future is a wrapper for a Publications_latestDeals_Results promised by a client call.
type Publications_latestDeals_Results_Future struct{ *capnp.Future }

func (f Publications_latestDeals_Results_Future) Struct() (Publications_latestDeals_Results, error) {
	p, err := f.Future.Ptr()
	return Publications_latestDeals_Results(p.Struct()), err
}

const schema_9cf9878fd3dd8473 = "x\xda\xa4Voh[\xe5\x17>\xe7}\x93\xde\xdc\xa4" +
	"i\xf2.\xe5\xd7\xfd\x86#\x1aV\x98\x85e\xb6\x15\xc7" +
	"\xaa\x92\x94\xae\xa8\xd3B\xee\x14\x86`u7\xe9ms" +
	"\xed\xcd\x1fso\xba\xa2\x08N\xe7:\xffaU&\xca" +
	"\xa6\x03\xc1\x0fE\xa6V\xa6\x8eN\x87\x82TT\xfc3" +
	"\xb7\x0f\xb6X\x86\xc3Q\x15\xfd\xa0XGer\xe5\xbd" +
	"\xc9\xbd\xb9jG\x9b\xf6\xdb\x0dy\xdes\xce\xf3<\xe7" +
	"\xbc\xef\xb9\xe6\x1cMz\xda\x83\xbb\xfd@\xa4Qo\x83" +
	"9sz\x9f0\x15\xfe\xf2Q`q\x04\xf0z\x04\x80" +
	"N\xe6\xfd\x1a\x01#\xad\xdey@\xf3\xf5\xb3\x81\x1f\xee" +
	">v\xf8 Hq$\x00^\xc2\x11\x8b\xdeY\x8e\x08" +
	"6p\xc4\xf7G\x7f\xc9\xdc\xd4}\xe01w\x88\xef\x1a" +
	"\xces\xc0\x82\x05\xc8^q\xc3g\xf3\xa3MOT\x01" +
	"\xc8\x01\x9f\x08\x16`NH\x00\x9a7\x8a#1\xb1u" +
	"\xf0I`\xdb\x1c@\xd0\x17#\xbc\x08\x1f\x07\xb4\x1cW" +
	"\x1b\xe2\xe9w\xc6y\x11h\x17\xd1\xeb\xf3sD\xbf\xef" +
	"\x0d@s\xe1\xc8C\x8f\x88/\x9f\x1aw\x87X\xf0m" +
	"\xe0\x80\xa0\xc8C\xdc:yRxxD|\xa9\x1a\xc2" +
	"\xaar\x8b\xf8\x13/\xa2\xdb\x02d\xf7\\\x1a\xed~\x81" +
	"\xbc\xe2\xaeR\x16-%\xca\x16`|\x92^{\xfe\xf1" +
	"g\x8f\x03\x8bSs\xae\xe5\xf7\xec\xcc\x95\xdf\xfe\x05\x80" +
	"\x9d\x87\xc4)\x8c\x1c\x13\x05\x80\xc8\x848\x16Y\xe4_" +
	"\xe6\x85\xe7\xbe(\x16'\xde\xfd\xb8RPE\x14\xb1\x8d" +
	"\x80\xc7l\xfa\xa0\xed\xcfm\xbd\xe5\xcf]\xff\xcc\x881" +
	"\xfe\xcf\xa7\x81\xa9\xd7\x0e\x9e\x18\xfa\xea\x1f4O\x8b\x96" +
	"R\x17DN\xb3\xfd\xe2\x9b\xd7\xa7O\xc5\xce\xba\x8b|" +
	"\xd0o\xb1x\xc6\xcf\x8b|\xff\xea?\x8e~\xd3\xf9\xc0" +
	"\xb9\x0a\xc0\x0a\xfe\xb6\x7f\x16\xc1c\x9e\xf8\xdf\xed[\xce" +
	"\\7;\xef>:\xe1_\xc7\x15\xfa\xd0:z\xe9\xbe" +
	"\xdd\xcfO\xfc\xb6\xf1g7\xe0W\xbfe\xb47\xc0\x01" +
	"\x0egv\x155\xf5\xfdsg\x9e\x1e[<\xc2\x05\xd8" +
	"\x1e(a\xa4/\xd0\x02\xd0yg`\x0c#}\x8d\x02" +
	"\xec7\x8b\xc3C[\xd3\xb2\xae6\xe4\x8b\xa5\xc2\x88:" +
	"\xa0\x94\xb6\xda\x1f\xf1\x8c\\\xcc\x17\xbbR\xe5\xb4\xa6f" +
	"dC-\xe4\xf5x\xb1\xacg7\xa5\xe4\x92\x9cC]" +
	"\x0aS\x0f\x80\x07\x01\x98\xbc\x01@\xba\x8b\xa2\x94%\xc8" +
	"\x10\x9b\xb90L\x89\x01H{(J\x1aAFH3" +
	"\xefL\xa6r\xe4\x00E\xa9H\x90Q\xda\x8c\x14\x80\xe5" +
	"82KQ2\x08\xd2\xbc\x8e\x8d@\xb0\x11P()" +
	"\x9a\xfdM\x8dQ\x0c\x9b\xf7,\x967\x0a\xfd\x91\x1f\x01" +
	"\x10\xc3\x80\x82\xae\x0ea\x10\x08\x06\x01\xebe2\xa0\xc8" +
	"\x9anQ\xa1\xb9\xba\xa8\xa0\xcd\xa4\xc3\xcd\x04\xabL\xba" +
	"\x96e\x12\xd5\xd4\x9cj\xa0\x0f\x08\xfa\x00\x13\x85\xc1A" +
	"]1P\x04\x82b\xfd,2%E6\x14NC\x90" +
	"s\xabt\xa4k)G:\x96\xe5\x91\xd03Y%'" +
	"c\xd8\xec\x99~o\xfaP\xc7\xf4[UW\xa2\x85\xbd" +
	"y\xa5\xb46_v)zY\xd0\x0c]\xf28\x8c\x82" +
	"\xbc$\x1fEi\x13\xc1\xa8\x85\xc2&\xc0\x14E\x0c\x9b" +
	"\x076\x9f,\x7ft\xf1\xf04\xaf\xa0\xc9\x95SXY" +
	"\xce\x1eY\xd3\xd2rf8\xbe\xb7\xa4\xba\xd4\\\"w" +
	"3\xc1h&[\xce\x0f\xff\x87\xde\x0aSi\xb2\xa1\xe8" +
	"\xc6\x0e\xa7\xf9r:\x80\xd4\xe8$\xea\xe5\xb6%)J" +
	"\xb7\xb9l\xbb\x85\xdb\xb6\x83\xa2\x94\xaau_\xdf:\x00" +
	"\xe9f\x8a\xd2\x1d\x975\x08\xf3v\x93\xadZ\x8f\x81B" +
	"^qf\xc4%G\xac&\xc7Zf\xb0\xda\xbd\xbb\x14" +
	"=T\xfe\x97\xd9]\xb5\x0c\x09eT\xd5\x0d\x1d\x11\x08" +
	"b\xfdI4U7\x9c+\xeb2\x96.\xdd\xb1\xde\x95" +
	"\xaa\x95\xa8\xc8\x95B\x94|\xd4\x0b\xe0\xbc\x95h?0" +
	"\xac\xbd\x03\x08k\x15\xb0\xf6\x08\xa2\xfd\xc4\xb0\xff\xb7\x01" +
	"aA!ju_\x12C\\\xf5$\xa6p\xad}l" +
	"\xeb\xba6\xfb\xedQ\xacW\xf7rQ+\xc8\x03\xce0" +
	"\xad\xa6\xc7\xdb\x96\xed\xf1\x90\xae\xde\xaf\xac\xf6\xf2\xacV" +
	"\xb8T\xfb\xed\xb4\xa6\x12\xa5\xf5\x04\xcdLU\x0e\x00@" +
	"V[0\x00\x91\xd5\x9f\xd3z@\xb9\xa4\x1a\xad\xdf\x18" +
	"\xf7\xe5a\xc50p\xad7d=Cd\x97\xedNy" +
	"oU\xa8\xcd\x04\xcdb\xf5\x04\x84\xf8\x19;7w\xca" +
	"\x9d\xd1\xb3\\\xc6\xa8\x95R\xf2\xa0{\x9b\xc3\x9dfO" +
	"\xcd\x07i\xbd5f\xf6R\x8b\xf6\xde\xc8&\xbb\x80\xb0" +
	"W\xf9\x98\xd9;3\xda\xcb\x16{\x91\x8f\xd9S\x02\x12" +
	"g\x85C{Sc\xfb\xf8\xb9\xb2\x80\xd4\xd90\xd1\xde" +
	"\xb4\x98\xca\xcf\xf5\x0b\xe8q\xd6l\xb4\x97e&\xf1\xb1" +
	"\xee\x15\xd0\xebl\xbfh\xafpl{\x1a\x08k\x17\x12" +
	"\x95[.\x89!\xee}\x12\x13\x95\xb6Kb\x88\x8b\x9a" +
	"\xac:\x95D\xd3v\x17\x04\xebw\x0a\xf1\xef\x00\x00\x00" +
	"\xff\xffV\xe1Q\xf6"

func RegisterSchema(reg *schemas.Registry) {
	reg.Register(&schemas.Schema{
		String: schema_9cf9878fd3dd8473,
		Nodes: []uint64{
			0x85cf10ba0781d1d9,
			0x889bad5ee80bd4ae,
			0x8986414763ed9fe4,
			0x8b0e78e7cb3c1c68,
			0x8c6625092276093d,
			0x90b6622e0669b417,
			0x90be9e0983809cf5,
			0x9d09768207bbb14b,
			0xa202984178fc6068,
			0xb4928ae23403b190,
			0xc7b7a97070ce93e5,
			0xcd754537fa2ac00e,
			0xd067b888abba0bca,
			0xd422be623bb0f731,
			0xdf7b33d89ff629bd,
			0xe7da36d32d5316b8,
			0xec1df2a9965771fc,
			0xfddc20d968f417dd,
		},
		Compressed: true,
	})
}
